/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1301: {
    ComplianceNFT: {
      address: "0x0efD6e19fDca08bCe4EFDb1C11C8C65996439990",
      abi: [
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "adminMint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "adminRenew",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "adminRevoke",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "isCompliant",
          "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "tokenOf",
          "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "validUntil",
          "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      inheritedFunctions: {},
    },
    CompliantLPHook: {
      address: "0xb38deb534cc5acbb32e2faeb7b15018724b59790",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_poolManager",
              type: "address",
              internalType: "address",
            },
            {
              name: "_complianceNFT",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "afterDonate",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "afterInitialize",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "sqrtPriceX96",
              type: "uint160",
              internalType: "uint160",
            },
            {
              name: "tick",
              type: "int24",
              internalType: "int24",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "afterModifyPosition",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.ModifyLiquidityParams",
              components: [
                {
                  name: "tickLower",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "tickUpper",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "liquidityDelta",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "salt",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "afterSwap",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.SwapParams",
              components: [
                {
                  name: "zeroForOne",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "amountSpecified",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "sqrtPriceLimitX96",
                  type: "uint160",
                  internalType: "uint160",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "beforeDonate",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "beforeInitialize",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "sqrtPriceX96",
              type: "uint160",
              internalType: "uint160",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "beforeModifyPosition",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.ModifyLiquidityParams",
              components: [
                {
                  name: "tickLower",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "tickUpper",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "liquidityDelta",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "salt",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "beforeSwap",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.SwapParams",
              components: [
                {
                  name: "zeroForOne",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "amountSpecified",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "sqrtPriceLimitX96",
                  type: "uint160",
                  internalType: "uint160",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "complianceNFT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IComplianceCheck",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getComplianceNFT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHookInfo",
          inputs: [],
          outputs: [
            {
              name: "poolManager_",
              type: "address",
              internalType: "address",
            },
            {
              name: "complianceNFT_",
              type: "address",
              internalType: "address",
            },
            {
              name: "enforceCompliance_",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPoolManager",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAddressCompliant",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "poolManager",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ComplianceCheckFailed",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "action",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ComplianceCheckPassed",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "action",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "InvalidComplianceNFT",
          inputs: [],
        },
        {
          type: "error",
          name: "NotCompliant",
          inputs: [],
        },
        {
          type: "error",
          name: "NotPoolManager",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 31402055,
    },
  },
  31337: {
    ComplianceNFT: {
      address: "0xe1Aa25618fA0c7A1CFDab5d6B456af611873b629",
      abi: [
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "adminMint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "adminRenew",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "adminRevoke",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "isCompliant",
          "outputs": [{"internalType": "bool", "name": "", "type": "bool"}],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "tokenOf",
          "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [{"internalType": "address", "name": "account", "type": "address"}],
          "name": "validUntil",
          "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      inheritedFunctions: {},
    },
    CompliantLPHook: {
      address: "0x8ce361602b935680e8dec218b820ff5056beb7af",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_poolManager",
              type: "address",
              internalType: "address",
            },
            {
              name: "_complianceNFT",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "afterDonate",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "afterInitialize",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "sqrtPriceX96",
              type: "uint160",
              internalType: "uint160",
            },
            {
              name: "tick",
              type: "int24",
              internalType: "int24",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "afterModifyPosition",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
              type: "address",
              internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.ModifyLiquidityParams",
              components: [
                {
                  name: "tickLower",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "tickUpper",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "liquidityDelta",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "salt",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "afterSwap",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.SwapParams",
              components: [
                {
                  name: "zeroForOne",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "amountSpecified",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "sqrtPriceLimitX96",
                  type: "uint160",
                  internalType: "uint160",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "beforeDonate",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "amount0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "beforeInitialize",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "sqrtPriceX96",
              type: "uint160",
              internalType: "uint160",
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "beforeModifyPosition",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.ModifyLiquidityParams",
              components: [
                {
                  name: "tickLower",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "tickUpper",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "liquidityDelta",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "salt",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "beforeSwap",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "key",
              type: "tuple",
              internalType: "struct PoolKey",
              components: [
                {
                  name: "currency0",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "currency1",
                  type: "address",
                  internalType: "Currency",
                },
                {
                  name: "fee",
                  type: "uint24",
                  internalType: "uint24",
                },
                {
                  name: "tickSpacing",
                  type: "int24",
                  internalType: "int24",
                },
                {
                  name: "hooks",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
            {
              name: "params",
              type: "tuple",
              internalType: "struct IPoolManager.SwapParams",
              components: [
                {
                  name: "zeroForOne",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "amountSpecified",
                  type: "int256",
                  internalType: "int256",
                },
                {
                  name: "sqrtPriceLimitX96",
                  type: "uint160",
                  internalType: "uint160",
                },
              ],
            },
            {
              name: "hookData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "complianceNFT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IComplianceCheck",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getComplianceNFT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHookInfo",
          inputs: [],
          outputs: [
            {
              name: "poolManager_",
              type: "address",
              internalType: "address",
            },
            {
              name: "complianceNFT_",
              type: "address",
              internalType: "address",
            },
            {
              name: "enforceCompliance_",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPoolManager",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAddressCompliant",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "poolManager",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ComplianceCheckFailed",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "action",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ComplianceCheckPassed",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "action",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "InvalidComplianceNFT",
          inputs: [],
        },
        {
          type: "error",
          name: "NotCompliant",
          inputs: [],
        },
        {
          type: "error",
          name: "NotPoolManager",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 4,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
